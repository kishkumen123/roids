----------------------
----- Questions ------
----------------------

immediate draw? how does it work, do you immediately apply the pixels to the back buffer? do you immediately update the back buffer?


----------------------
------- To-Dos -------
----------------------

serialization/deserialization
    write out the data to a file
    read the data from a file and load the image

    do it in a human friendly format, text based format, easy to debug harder to code
    binary format, nice but harder to debug
        copy of the in memory format, or different format
        if different format, if you upate your engine you can use old saves

- sometimes D turning doesnt work. I think its the problem with the keyboard itself and not the program

stb_image.h:
    not loading data for some reason, even though,
        int ok = stbi_info((char const*)full_path.str, &x, &y, &n);
    gives back ok = 1

array of data, put the size first and then put the data, or put in the data and have a special value to tell you when its done
second approach is useful because

- cast glyph data to bitmap?
Rect:
    something not quite right with borders, especially when they are big and intrude

Fonts:
    fix gamma colors. Do a linear blend.

events:
    add mouse events

UI:
    make it
    
SIDE STEP A LITTLE:
    - stop side step for now, go back to font stuff.
    - when I come back to this, we need to do lighting + simd


improve render pipeline
add directx render pipeline
maybe dynamic array



----------------------
--- What I learned ---
----------------------

2/24/2023:
    - learned the value of rect and rect helper functions

2/26/2023:
    - learned an easier way to do events from our good man JB
    - nice file separation

2/27/2023:
    - learned about worldspace, screenspace, pixelspace.
        worldspace is usually some real world unit of measurement that represent everything in the game
        screenspace is usualyl a (0 - 1) ratio of the screen w/h, which makes it easier to deal with UI elements and such
        pixelspace can be used as a representation, but it causes problems such as old games drawing small, and it is resolution dependent (Yuk!)
    - changed how I represent rects

3/5/2023:
    - Discord link (hopefully it doesnt expire): https://discord.com/channels/239737791225790464/1081457412977983509
    - Drawing text. Learned a lot from this. Used stb_truetype.h to load fonts and glyph bitmaps.
        Used this as reference for what the terms mean: https://i.stack.imgur.com/aWQMj.png
        baseline, left/right bearing, w/h, (x0, y0, x1, y2) rises again, kerning, advance.
        I draw bottom up, stb draws top down, was confusing for Y even though it said multiple times
            it draws top down (Should have figured it out sooner)
            visualization is never wasted
    - From here I move to

3/6/2023:
    - Bilinear filtering. I'm not doing it, and I should.
        From what I understand now, its a sample of 4 pixels. Linear blend between A`=(A, B), B`=(C, D), (A`, B`)
        and you set dest to that color.
        thats where sRGB and gamma blending comes from.

3/23/2023:
    - Back. Starting HMH vids on renderer. Gonna take a second pass on it. Hopefully it wont take too long (1/2) weeks.

4/1/2023:
    - Got my basis(origin, x_axis, y_axis) working.
    - Got scale rotation sheer working
    - Video captured for web documentation.
        a) rotating 3 small rects
        b) rotating 1 large rect with 4 small rects on point (step between A and C)

4/7/2023:
    - flux: added -Wconversion -Werror -Wall -Wextra and fixed all my type conversion errors and a bunch of other errors
    - base: added -Wconversion -Werror -Wall -Wextra and fixed all my type conversion errors and a bunch of other errors

4/9/2023:
    - back to fonts. building out cursor.

4/10/2023:
    - understood how to build strings. just write it to a buffer and convert it to Str8, or struct chunk { u8 str[100]; chunk* next; }
    - added console input rendering
    
4/11/2023:
    - actually made bottom left (0, 0) by changing bitmap_info.bmiHeader.biHeight from - to +.
    - had to flip all my rendering
    - finished the visual aspect of the console. No cursor moving yet. But we have History!!!

4/24/2023:
    - working console
    - can run commands (add, exit)
    - for now will pivot to something else

4/26/2023:
    - got a spaceship moving around with wasd

4/27/2023:
    - make a lot of vim improvements, nothing to do with the actual project

4/28/2023:
    - improved Controller. Now pressed and held work as expected



















